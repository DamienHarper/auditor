name: auditor 3.x CI

on:
  schedule:
    - cron: 0 0 * * *
  pull_request:
    branches:
      - master
  push:
    branches:
      - master

jobs:

  code_style_composer_checks:
    name: Runs PHP-CS-Fixer to check for CS issues, and validates composer.json
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: 8.1
          extensions: composer:v2

      - name: Install PHP-CS-Fixer
        run: composer install --no-progress --ansi --working-dir=tools/php-cs-fixer

      - name: Run PHP-CS-Fixer
        run: composer cs-check

      - name: Validate composer
        run: composer validate --strict --no-check-lock

  tests_sf:
    name: Tests PHP ${{ matrix.php }}, Symfony ${{ matrix.symfony }}, ${{ matrix.db }}
    runs-on: ubuntu-latest
    needs: [ code_style_composer_checks ]

    services:
      mysql:
        image: mysql:8
        env:
          MYSQL_ALLOW_EMPTY_PASSWORD: yes
          MYSQL_DATABASE: auditor
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

      postgres:
        image: postgres
        env:
          POSTGRES_PASSWORD: password
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    strategy:
      matrix:
        php:
          - '8.0'
          - '8.1'
        symfony:
          - '5.*'
          - '6.*'
        db:
          - 'sqlite'
          - 'mysql'
          - 'pgsql'
      fail-fast: false

    steps:
      - name: Shutdown Ubuntu MySQL (SUDO)
        run: sudo service mysql stop # Shutdown the Default MySQL, "sudo" is necessary, please not remove it

      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          extensions: composer:v2, flex, pcov
          coverage: pcov

      - name: Configure Symfony
        run: |
          composer global config --no-plugins allow-plugins.symfony/flex true
          composer global require --no-progress --no-scripts --no-plugins symfony/flex
          composer config extra.symfony.require "${{ matrix.symfony }}"

      - name: Get Composer Cache Directory
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"

      - name: Cache dependencies
        uses: actions/cache@v2
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ matrix.php }}-composer-${{ hashFiles('**/composer.json') }}
          restore-keys: ${{ matrix.php }}-composer-

      - name: Update project dependencies (5.*)
        if: matrix.symfony == '5.*'
        run: SYMFONY_REQUIRE="^5.4" composer update --no-progress --ansi --prefer-stable

      - name: Update project dependencies (6.*)
        if: matrix.symfony == '6.*'
        run: SYMFONY_REQUIRE="^6.0" composer update --no-progress --ansi --prefer-stable

      - name: Install PHPStan
        run: composer install --no-progress --ansi --working-dir=tools/phpstan

      - name: Run PHPStan
        run: composer phpstan

      - name: Run tests
        run: |
          RAW_CODECOV_REPORT="php-${{ matrix.php }}-sf-${{ matrix.symfony }}-${{ matrix.db }}-coverage"
          echo "CODECOV_REPORT=$(echo $RAW_CODECOV_REPORT | sed 's/\.\*//')" >> $GITHUB_ENV
          vendor/bin/phpunit -c phpunit.${{ matrix.db }}.xml --coverage-clover=coverage.xml

      - name: Upload coverage file
        uses: actions/upload-artifact@v2
        with:
          name: ${{ env.CODECOV_REPORT }}
          path: coverage.xml

  upload_coverage:
    name: "Upload coverage to Codecov"
    runs-on: "ubuntu-latest"
    needs:
      - tests_sf

    steps:
      - name: "Checkout"
        uses: "actions/checkout@v2"
        with:
          fetch-depth: 2

      - name: "Download coverage files"
        uses: "actions/download-artifact@v2"
        with:
          path: "reports"

      - name: "Upload to Codecov"
        uses: "codecov/codecov-action@v2"
        with:
          directory: reports
          token: ${{ env.CODECOV_TOKEN }}
